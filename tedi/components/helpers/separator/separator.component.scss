@use "@tedi-design-system/core/mixins";

$sizes: (
  "0": 0,
  "0-25": 0.25rem,
  "0-5": 0.5rem,
  "0-75": 0.75rem,
  "1": 1rem,
  "1-25": 1.25rem,
  "1-5": 1.5rem,
  "1-75": 1.75rem,
  "2": 2rem,
  "2-5": 2.5rem,
  "5": 5rem,
);

.tedi-separator {
  display: block;
  position: relative;
  margin: 0;
  border: 0;
  border-top-width: 1px;
  border-style: solid;

  @include mixins.print-grayscale;

  &--vertical {
    border-top-width: 0;
    border-left-width: 1px;
  }

  &--primary {
    border-color: var(--general-border-primary);
  }

  &--secondary {
    border-color: var(--general-border-secondary);
  }

  &--accent {
    border-color: var(--general-border-accent);
  }

  &--block {
    display: block;
  }

  &--inline {
    display: inline;
  }
}

.tedi-separator--dotted,
.tedi-separator--dotted-small {
  &::before {
    position: absolute;
    top: 1.25rem;
    content: "";
    background-color: var(--general-border-primary);
    border-radius: 100%;
    transform: translateX(-8px);

    @include mixins.print-grayscale;
    @include mixins.responsive-styles(height, separator-dotted-dot-lg);
    @include mixins.responsive-styles(width, separator-dotted-dot-lg);
  }

  &.tedi-separator--secondary::before {
    background-color: var(--general-border-secondary);
  }

  &.tedi-separator--accent::before {
    background-color: var(--general-border-accent);
  }
}

.tedi-separator--dotted-small::before {
  top: 1.5rem;
  transform: translateX(-5px);

  @include mixins.responsive-styles(height, separator-dotted-dot-md);
  @include mixins.responsive-styles(width, separator-dotted-dot-md);
}

@each $size, $value in $sizes {
  .tedi-separator--horizontal.tedi-separator--top-#{$size} {
    margin-top: #{$value};
  }

  .tedi-separator--horizontal.tedi-separator--bottom-#{$size} {
    margin-bottom: #{$value};
  }

  .tedi-separator--vertical.tedi-separator--left-#{$size} {
    margin-left: #{$value};
  }

  .tedi-separator--vertical.tedi-separator--right-#{$size} {
    margin-right: #{$value};
  }

  .tedi-separator--horizontal.tedi-separator--spacing-#{$size}:not(
      .tedi-separator--dot-only
    ) {
    margin-top: #{$value};
    margin-bottom: #{$value};
  }

  .tedi-separator--horizontal.tedi-separator--dot-only.tedi-separator--spacing-#{$size},
  .tedi-separator--vertical.tedi-separator--spacing-#{$size} {
    margin-right: #{$value};
    margin-left: #{$value};
  }
}

$thicknesses: (
  "1": 1px,
  "2": 2px,
);

@each $thickness, $value in $thicknesses {
  .tedi-separator {
    &.tedi-separator--thickness-#{$thickness} {
      border-top-width: #{$value};
    }

    &--vertical.tedi-separator--thickness-#{$thickness} {
      border-left-width: #{$value};
    }
  }
}

.tedi-separator--dot-only {
  position: relative;
  display: inline-block;
  vertical-align: middle;
  border: none;

  &::before {
    position: relative;
    display: block;
    content: "";
    border-radius: 100%;

    @include mixins.print-grayscale;
    @include mixins.responsive-styles(height, separator-dotted-dot-sm);
    @include mixins.responsive-styles(width, separator-dotted-dot-sm);
  }

  &.tedi-separator--dot-only-extra-small::before {
    @include mixins.responsive-styles(width, separator-dotted-dot-xs);
    @include mixins.responsive-styles(height, separator-dotted-dot-xs);
  }

  &.tedi-separator--dot-only-small::before {
    @include mixins.responsive-styles(width, separator-dotted-dot-sm);
    @include mixins.responsive-styles(height, separator-dotted-dot-sm);
  }

  &.tedi-separator--dot-only-medium::before {
    @include mixins.responsive-styles(width, separator-dotted-dot-md);
    @include mixins.responsive-styles(height, separator-dotted-dot-md);
  }

  &.tedi-separator--dot-only-large::before {
    @include mixins.responsive-styles(width, separator-dotted-dot-lg);
    @include mixins.responsive-styles(height, separator-dotted-dot-lg);
  }

  &-filled {
    &.tedi-separator--primary::before {
      background-color: var(--general-border-primary);
    }

    &.tedi-separator--secondary::before {
      background-color: var(--general-border-secondary);
    }

    &.tedi-separator--accent::before {
      background-color: var(--general-border-accent);
    }
  }

  &-outlined {
    &::before {
      border-style: solid;
    }

    &.tedi-separator--primary::before {
      border-color: var(--general-border-primary);
    }

    &.tedi-separator--secondary::before {
      border-color: var(--general-border-secondary);
    }

    &.tedi-separator--accent::before {
      border-color: var(--general-border-accent);
    }

    @each $thickness, $value in $thicknesses {
      &.tedi-separator--thickness-#{$thickness} {
        &::before {
          border-width: #{$value};
        }
      }
    }
  }
}

.tedi-separator--horizontal {
  &.tedi-separator--dotted::before,
  &.tedi-separator--dotted-small::before {
    right: 0;
    left: 0;
    margin: 0 auto;
    transform: initial;
  }

  &.tedi-separator--dotted::before {
    top: calc(var(--_top-dotted) / 2 * -1);

    @include mixins.responsive-styles(--_top-dotted, separator-dotted-dot-lg);
  }

  &.tedi-separator--dotted-small::before {
    top: calc(var(--_top-dotted-small) / 2 * -1);

    @include mixins.responsive-styles(
      --_top-dotted-small,
      separator-dotted-dot-md
    );
  }
}
