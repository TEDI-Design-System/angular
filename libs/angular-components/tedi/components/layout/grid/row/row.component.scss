$grid-columns: 12;
$spacer: 1rem;
$gaps: (
  0: 0,
  1: $spacer * 0.25,
  2: $spacer * 0.5,
  3: $spacer,
  4: $spacer * 1.5,
  5: $spacer * 3,
);

$justify-items: ("start", "end", "center", "stretch");
$align-items: ("start", "end", "center", "stretch");

.row {
  display: grid;

  &--cols-auto {
    --_grid-col-size-calc: calc((100% - var(--_grid-gap) * (#{$grid-columns} - 1)) / #{$grid-columns});
    --_grid-col-min-size-calc: min(100%, max(var(--_grid-col-width), var(--_grid-col-size-calc)));
    grid-template-columns: repeat(auto-fit, minmax(var(--_grid-col-min-size-calc), 1fr));
  }

  @for $i from 1 through $grid-columns {
    &--cols-#{$i} {
      grid-template-columns: repeat(#{$i}, 1fr);
    }
  }

  @each $key in $justify-items {
    &--justify-items-#{$key} {
      justify-items: #{$key};
    }
  }

  @each $key in $align-items {
    &--align-items-#{$key} {
      align-items: #{$key};
    }
  }
}

@each $key, $value in $gaps {
  .g-#{$key} {
    gap: #{$value};
  }

  .gx-#{$key} {
    column-gap: #{$value};
  }

  .gy-#{$key} {
    row-gap: #{$value};
  }
}
