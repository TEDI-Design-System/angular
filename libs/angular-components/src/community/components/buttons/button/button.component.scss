@use "@tehik-ee/tedi-core/mixins";
@use "sass:list";

$neutral-variants: "neutral", "danger-neutral";

/*
create .tedi-button scoped color variables for every variant
*/
@mixin button-variant-color-vars($variant) {
  --_btn-bg: var(--button-main-#{$variant}-background-default);
  --_btn-border: var(--button-main-#{$variant}-border-default);
  --_btn-text: var(--button-main-#{$variant}-text-default);

  @include button-state-color-vars($variant, "hover");
  @include button-state-color-vars($variant, "focus");
  @include button-state-color-vars($variant, "active");

  @include button-disabled-color-vars($variant);
}

/*
create color variables for every state in a variant
*/
@mixin button-state-color-vars($variant, $state) {
  --_btn-#{$state}-bg: var(
    --button-main-#{$variant}-background-#{$state},
    var(--button-main-#{$variant}-background-default)
  );
  --_btn-#{$state}-border: var(
    --button-main-#{$variant}-border-#{$state},
    var(--button-main-#{$variant}-border-default)
  );
  --_btn-#{$state}-text: var(
    --button-main-#{$variant}-text-#{$state},
    var(--button-main-#{$variant}-text-default)
  );
}

/*
create disabled state color variables
*/
@mixin button-disabled-color-vars($variant) {
  --_btn-disabled-text: var(--button-main-disabled-general-text);

  @if list.index($neutral-variants, $variant) {
    --_btn-disabled-bg: var(--button-main-disabled-neutral-background);
    --_btn-disabled-border: var(--button-main-disabled-neutral-border);
  } @else {
    --_btn-disabled-bg: var(--button-main-disabled-general-background);
    --_btn-disabled-border: var(--button-main-disabled-general-border);
  }
}

/*
create .tedi-button scoped size variables for every variant
*/
@mixin button-size-vars($size) {
  --_btn-padding: var(--_btn-padding-y) var(--_btn-padding-x);

  @include mixins.responsive-styles(
    --_btn-inner-spacing,
    button-#{$size}-inner-spacing
  );
  @include mixins.responsive-styles(
    --_btn-padding-y,
    button-#{$size}-padding-y
  );
  @include mixins.responsive-styles(
    --_btn-padding-x,
    button-#{$size}-padding-x
  );
}

/*
overrides padding variables for neutal button
*/
@mixin neutral-button-padding-overrides {
  &:where(.tedi-btn--sm) {
    @include mixins.responsive-styles(
      --_btn-padding-y,
      button-sm-neutral-padding-y
    );
    @include mixins.responsive-styles(
      --_btn-padding-x,
      button-sm-neutral-padding-x
    );
  }
  &:where(.tedi-btn--md) {
    @include mixins.responsive-styles(
      --_btn-padding-y,
      button-md-neutral-padding-y
    );
    @include mixins.responsive-styles(
      --_btn-padding-x,
      button-md-neutral-padding-x
    );
  }
}

.tedi-btn {
  cursor: pointer;
  background: var(--_btn-bg);
  border-color: var(--_btn-border);
  color: var(--_btn-text);
  display: inline-flex;
  align-items: center;
  justify-content: center;
  gap: var(--_btn-inner-spacing);
  padding: var(--_btn-padding);
  border-radius: var(--_btn-radius);
  border-style: solid;
  border-width: 1px;
  transition: 150ms ease;
  transition-property: background-color, border-color;

  @include mixins.responsive-styles(
    font-family,
    family-primary,
    $exclude: tablet
  );
  @include mixins.responsive-styles(font-size, button-text-size-default);
  @include mixins.responsive-styles(font-weight, body-regular-weight);
  @include mixins.responsive-styles(line-height, body-bold-line-height);
  @include mixins.responsive-styles(--_btn-radius, button-radius-default);

  &:focus {
    background: var(--_btn-focus-bg);
    border-color: var(--_btn-focus-border);
    color: var(--_btn-focus-text);
  }

  &:hover {
    background: var(--_btn-hover-bg);
    border-color: var(--_btn-hover-border);
    color: var(--_btn-hover-text);
  }

  &:active {
    background: var(--_btn-active-bg);
    border-color: var(--_btn-active-border);
    color: var(--_btn-active-text);
  }

  &--sm {
    @include button-size-vars("sm");
  }

  &--md {
    @include button-size-vars("md");
  }

  &--primary {
    @include button-variant-color-vars("primary");

    &.tedi-btn--inverted {
      @include button-variant-color-vars("primary-inverted");
    }
  }

  &--secondary {
    @include button-variant-color-vars("secondary");

    &.tedi-btn--inverted {
      @include button-variant-color-vars("secondary-inverted");
    }
  }

  &--neutral {
    @include button-variant-color-vars("neutral");
    @include neutral-button-padding-overrides;

    &.tedi-btn--inverted {
      @include button-variant-color-vars("neutral-inverted");
    }
  }

  &--success {
    @include button-variant-color-vars("success");
  }

  &--danger {
    @include button-variant-color-vars("danger");
  }

  &--danger-neutral {
    @include neutral-button-padding-overrides;
    @include button-variant-color-vars("danger-neutral");
  }

  &--full-width {
    width: 100%;
  }

  &:disabled {
    pointer-events: none;
    background: var(--_btn-disabled-bg);
    border-color: var(--_btn-disabled-border);
    color: var(--_btn-disabled-text);
  }
}
