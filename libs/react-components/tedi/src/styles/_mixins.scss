$breakpoints: (
  xs: 0,
  sm: 576px,
  md: 768px,
  lg: 992px,
  xl: 1200px,
  xxl: 1400px,
);

@function construct-variables($variable-names, $suffix, $calc) {
  $result: '';

  @each $name in $variable-names {
    $result: #{$result} apply-calculation(var(--#{$name}-#{$suffix}), $calc);
  }

  @return $result;
}

@function apply-calculation($value, $calc) {
  @if $calc {
    @return calc(#{$value} #{$calc});
  } @else {
    @return $value;
  }
}

// Mixin for applying responsive styles
@mixin responsive-styles($property, $names, $exclude: null, $calc: null) {
  $variable-names: ();

  @if type-of($names) == 'string' {
    $variable-names: (str-slice($names, 1, -1));
  } @else {
    $variable-names: $names;
  }

  #{$property}: #{construct-variables($variable-names, mobile, $calc)};

  @if $exclude != 'tablet' {
    @media (min-width: map-get($breakpoints, sm)) {
      #{$property}: #{construct-variables($variable-names, tablet, $calc)};
    }
  }

  @if $exclude != 'desktop' {
    @media (min-width: map-get($breakpoints, lg)) {
      #{$property}: #{construct-variables($variable-names, desktop, $calc)};
    }
  }
}
